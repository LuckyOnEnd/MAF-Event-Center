@page "/event/details/{id:guid}"

@inject AuthenticationStateProvider AuthenticationStateProvider

@using MAF_Event_Center.SPA.AuthProviders;
@using MAF_Event_Center.SPA.Models;
@using MAF_Event_Center.SPA.Models.Events;
@using MAF_Event_Center.SPA.Services;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;

@inject IEventService EventService;
@inject IUserService UserService;

<PageTitle>MAF Event Center</PageTitle>

<div class="container">
    <ol class="list-group list-group-numbered">
        <div class="fw-bold">@eventApp.Name</div>
        <div class="ms-2 me-auto">
            <span>@eventApp.GameName</span>
            <span>@eventApp.StartEvent</span>
            <span>@eventApp.EndEvent</span>
            <a href="/user/@eventApp.CreatedUser">@eventApp.CreatedUser</a>
        </div>
        <div class="fw-bold">Members</div>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Nickname</div>
                Content for list item
            </div>
            <span class="badge bg-primary rounded-pill">14</span>
        </li>
    </ol>
</div>


@code {
    [Parameter]
    public Guid Id { get; set; }
    private Event eventApp = new Event();
    private List<UserEvent> userEvents = new List<UserEvent>();

    protected async override Task OnInitializedAsync()
    {
        eventApp = await EventService.GetEvent(Id);
    }

    private async Task JoinToEvent()
    {
       
        var userEvent = new UserEvent() { Id = Guid.NewGuid() , EventId = eventApp.Id };
        await EventService.JoinUserToEvent(userEvent);

    }
}
